---
- name: AWS | NAT GW discovery subnet
  ec2_vpc_subnet_facts:
    region: "{{ item_vpc.region }}"
    filters:
      "tag:Name": "{{ item_vpc.nat_gw_subnet }}"
  register: ret_natgw_net

- name: AWS | NAT show
  debug: var=ret_natgw_net

- name: "AWS | NAT GW check subnets"
  fail:
    msg: "AWS | NAT GW failed: no subnets named {{ item_vpc.nat_gw_subnet }}"
  when: ret_natgw_net.subnets | length < 1

- name: AWS | NAT GW Create
  ec2_vpc_nat_gateway:
    state: present
    region: "{{ item_vpc.region }}"
    subnet_id: "{{ ret_natgw_net.subnets[0].id }}"
    if_exist_do_not_create: true
    wait: yes
    tags: "{{ item_vpc.tags | d({}) }}"
  register: ret_natgw

- name: AWS | NAT GW name
  ec2_tag:
    state: present
    region: "{{ item_vpc.region }}"
    resource: "{{ ret_natgw.nat_gateway_id }}"
    tags:
      Name: "{{ item_vpc.nat_gw_name |d(item_vpc.name+'-natgw') }}"

- name: AWS | IGW fact
  set_fact:
    vpc_natgw: "{{ ret_natgw.nat_gateway_id }}"
